import java.util.*;

class Job {
    char id;
    int deadline, profit;

    Job(char id, int deadline, int profit) {
        this.id = id;
        this.deadline = deadline;
        this.profit = profit;
    }
}

public class JobScheduling {
    public static int maxProfit(Job[] jobs) {
        Arrays.sort(jobs, (a, b) -> b.profit - a.profit);
        
        int n = jobs.length;
        boolean[] slots = new boolean[n];
        char[] jobSequence = new char[n];
        int totalProfit = 0;
        
        for (Job job : jobs) {
            for (int j = Math.min(n, job.deadline) - 1; j >= 0; j--) {
                if (!slots[j]) {
                    slots[j] = true;
                    jobSequence[j] = job.id;
                    totalProfit += job.profit;
                    break;
                }
            }
        }
        
        System.out.println("Profit sequence of jobs: " + Arrays.toString(jobSequence));
        return totalProfit;
    }

    public static void main(String[] args) {
        Job[] jobs = {
            new Job('a', 4, 20),
            new Job('b', 1, 10),
            new Job('c', 1, 40),
            new Job('d', 1, 30)
        };
        
        System.out.println("Maximum Profit: " + maxProfit(jobs));
    }
}
